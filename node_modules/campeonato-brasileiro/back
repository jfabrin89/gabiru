'use strict';
require('es6-promise').polyfill();
var request = require('request')
var cheerio = require('cheerio');

exports.jogos2 = function(ano, serie) {
  return new Promise(function(acept, error) {
    var options = {
      url: 'https://www.cbf.com.br/futebol-brasileiro/competicoes/campeonato-brasileiro-serie-a/',// + serie,
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36'
      }
    };
    request(options, function(error, response, html) {
      if(!error) {

        var $ = cheerio.load(html);
        var lista = [];
        // console.log(html);
        // console.log($('.rodadas-classificacao li').length);

        var x = 1;
        var i = 1;
        $('.swiper-wrapper > div').each(function() {
          var x = 1;
          var produto = {};
          var item = $(this);
          produto.mandante = item.find('.pull-left img').attr('title');
          produto.visitante  = item.find('.pull-right img').attr('title');
          // console.log(item.find('.aside-header > h3').text());
          // console.log('#######################################################');
          produto.rodada = item.find('.aside-header > h3').text().replace('Rodada ', '');
          // item.find('div.aside-content > ul.list-unstyled > li').each(function(i, el) {
          //   var item2 = $(el);

          // console.log(item2.find('.pull-left img').attr('title'));
          // console.log(item2.find('.pull-right img').attr('title'));
          // console.log(item2.html());
          // console.log('#######################################################');
          // produto.mandante = item2.find('.pull-left img').attr('title');
          // produto.visitante  = item2.find('.pull-right img').attr('title');
          // produto.mandantePlacar = item.find('.link-time').first().next().next().text().trim();
          // produto.visitantePlacar = item.find('.link-time').first().next().next().next().next().text().trim();
          // produto.estadio = item2.find('.partida-desc').text().trim();
          //   if(x = 10 ) lista.push(produto);
          //   x++;
          // });
          if(x = 10 ) lista.push(produto);


          // var dados = item.find('.local').text().split(' ').filter(x => x.length > 1)
          // produto.rodada = x;
          // i++;
          // if(i == 10) x++;
          //
          // if(dados[1].length > 0) {
          //   produto.data = dados[1];
          //   produto.horario = dados[2];
          //   produto.dia = dados[0];
          // } else {
          //   produto.data = '';
          //   produto.horario = '';
          //   produto.dia = '';
          // }
          //
          // produto.mandante = item.find('.link-time').first().find('a').text().trim();
          // produto.visitante  = item.find('.link-time').last().find('a').text().trim();
          // produto.mandantePlacar = item.find('.link-time').first().next().next().text().trim();
          // produto.visitantePlacar = item.find('.link-time').first().next().next().next().next().text().trim();
          //
          // produto.estadio = dados.splice(4, 10).join(' ');
          // produto.cidade = '';
          // produto.transmisao = [];

        });
        acept(lista);
      } else {
        error({ error:"Não foi possível retornar as informações!" });
      }
    });
  });
};

exports.jogos = function() {
  return new Promise(function(resolve, reject) {
    const url = 'http://jsuol.com.br/c/monaco/utils/gestor/commons.js?callback=simulador_dados_jsonp&file=commons.uol.com.br/sistemas/esporte/modalidades/futebol/campeonatos/dados/2019/30/dados.json';
    var options = {
      url: url,
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36'
      }
    };
    request(options, function(error, response, html) {
      if(!error) {

        const data = JSON.parse(response.body.replace('simulador_dados_jsonp(', '').replace(' );', ''));
        var result = [];
        var keys = Object.keys(data.fases);

        //Get Jogos
        for (var i = 1; i < 38; i++) {
          var jogos = data.fases[keys[0]].jogos.rodada[i];
          for(var x in jogos){

            //Get Info Jogo
            var jogo = data.fases[keys[0]].jogos.id[jogos[x]];
            var timeMandante = data.equipes[jogo.time1];
            var golsMandante = jogo.placar1 ? parseInt(jogo.placar1) : '';
            var timeVisitante = data.equipes[jogo.time2];
            var golsVisitante = jogo.placar2 ? parseInt(jogo.placar2) : '';

            var obj = {};
            obj.mandante = timeMandante["nome-comum"];
            obj.mandantePlacar = golsMandante;
            obj.visitante = timeVisitante["nome-comum"];
            obj.visitantePlacar = golsVisitante;
            obj.rodada = jogo.rodada;
            obj.data = jogo.data;
            obj.horario = jogo.horario;
            obj.dia = '';
            obj.estadio = jogo.estadio;
            obj.cidade = jogo.local;
            result.push(obj);
          }
        }
        resolve(result)
      }
    });
  });
}

exports.tabela = function(ano, serie) {
  return new Promise(function(acept, error) {
    var options = {
      url: 'http://www.tabeladobrasileirao.net/' + ano + '/serie-' + serie,
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36'
      }
    };
    request(options, function(error, response, html) {
      if(!error) {

        var $ = cheerio.load(html);
        var lista = [];
        $('.container-table .simulator-table .table tbody tr').each(function() {
          var item = $(this);
          var jogo = {};
          jogo.nome = item.find('.club-name--desktop').text().trim();
          jogo.abreviacao = item.find('.club-name--mobile').text().trim();
          jogo.pontos = parseInt(item.find('.points').text().trim());
          jogo.jogos = parseInt(item.find('.played').text().trim());
          jogo.vitorias = parseInt(item.find('.wins').text().trim());
          jogo.empates = parseInt(item.find('.draws').text().trim());
          jogo.derrotas = parseInt(item.find('.losses').text().trim());
          jogo.golsPro = parseInt(item.find('.goals_for').text().trim());
          jogo.golsContra = parseInt(item.find('.goals_against').text().trim());
          jogo.saldoGols = parseInt(item.find('.goals_diff').text().trim());
          jogo.aproveitamento = parseInt(item.find('.percent').text().trim());
          lista.push(jogo);
        });
        acept(lista);
      } else {
        error({ error:"Não foi possível retornar as informações!" });
      }
    });
  });
};


exports.rodadaAtual = function(ano, serie) {
  return new Promise(function(acept, error) {
    var options = {
      url: 'http://www.tabeladobrasileirao.net/' + ano + '/serie-' + serie,
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36'
      }
    };
    request(options, function(error, response, html) {
      if(!error) {

        var $ = cheerio.load(html);
        var lista = [];
        // console.log($.html());;
        $('.container-table .simulator-games .table tbody tr').each(function() {
          var rodada = {};
          var item = $(this);
          if(!item.attr('hidden')) {
            // console.log(item.attr('hidden'));
            rodada.rodada = item.attr('data-round');
            var dateS = item.find('.game-date').text().split(' - ');
            if(dateS.length > 0) {
              rodada.data = dateS[1].trim();
              rodada.horario = dateS[2].trim();
              rodada.dia = dateS[0].trim();
            } else {
              rodada.data = '';
              rodada.horario = '';
              rodada.dia = '';
            }
            rodada.mandante = item.find('.game-club--principal').attr('title').trim();
            rodada.placarMandante = item.find('div.game-scoreboard-values').children().first().text().trim();
            rodada.visitante  = item.find('.game-club--visitor').attr('title').trim();
            rodada.placarVisitante = item.find('div.game-scoreboard-values').children().last().text().trim();
            rodada.estadio = item.find('.game-location').text().trim();
            if(!rodada.placarMandante) rodada.placarMandante = 0;
            if(!rodada.placarVisitante) rodada.placarVisitante = 0;
            lista.push(rodada);
          }

        });
        acept(lista);
      } else {
        error({ error:"Não foi possível retornar as informações!" });
      }
    });
  });
};
